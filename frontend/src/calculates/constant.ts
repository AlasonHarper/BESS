import { ISharedYearRoundTariffData } from './CoGS/type';
import {
  IAssumptionData,
  IBatteryAugmentation,
  IBatteryCubes,
  IBatteryDisposal,
  IBatteryEfficiency,
  IBatteryExcubes,
  IBessCapexForecast,
  ICapexPaymentForm,
  ICapexPaymentMilestoneForm,
  ICapexUELForm,
  ICycleData,
  IDetailedRevenueData,
  IFixedPPA,
  IFloatingPPA,
  IInflationForm,
  IRevenueSetup,
  IStartingBatteryAssumptions,
  ITriadsIncome,
  IVintage
} from './Revenue/type';

export const DEFAULT_DETAILED_REVENUE_DATA = [
  {
    forecastProvider: 'Modo',
    dataByBatteryDuration: [
      {
        duration: 4,
        dataByTradingStrategy: [
          {
            tradingStrategy: 'Merchant and ancillaries',
            dataByRegion: [
              {
                region: 'Northern',
                dataByItems: [
                  {
                    item: 'Wholesale Day Ahead Revenues',
                    data: [
                      11468.91, 10733.59, 10965.37, 8004.6, 8257.43, 7552.15,
                      7414.77, 8729.81, 8074.23, 10156.64, 10850.72, 11729.59,
                      12364.99, 11846.91, 11445.9, 8821.95, 9262.49, 8546.49,
                      8489.56, 9104.02, 8556.44, 11712.15, 11900.93, 12248,
                      11321.32, 10398.71, 10218.13, 7628.91, 7957.64, 7910.52,
                      8084.11, 8342.48, 7352.27, 10344.44, 10020.93, 11347.68,
                      10126.85, 9377.33, 9198.53, 7159.29, 7643.98, 6901.91,
                      7807.84, 8468.42, 6999.61, 9664.53, 9017.96, 10164.67,
                      8765.02, 9002, 8727.56, 6210.16, 6691.03, 6476.17,
                      6306.48, 7503.55, 6319.69, 8818.12, 8100.97, 9472,
                      8321.03, 8758.4, 8283.91, 5809.53, 6696.25, 6055.2,
                      5991.62, 7533.89, 6039.97, 8159.9, 8300.13, 8300.52,
                      8940.63, 8427.99, 8763.43, 6100.39, 7086.35, 6428.16,
                      6401.72, 7466.66, 6132.36, 8197.66, 8390.15, 8569.04,
                      10108.16, 8126.9, 7408.18, 6284.49, 7168.23, 5892.14,
                      6446.68, 6779.87, 5497.78, 8217.26, 8015.22, 8727.16,
                      10515.04, 8078.18, 7524.57, 5668.59, 7018.35, 6707.44,
                      7339.37, 6614.89, 5114.09, 7382.82, 7171.78, 8519.92,
                      7446.68, 7706.13, 7630.07, 5608.68, 6324.49, 6839.52,
                      6989.51, 7373.5, 5557.13, 7108.68, 7003.45, 8121.82,
                      8596.95, 7629.79, 7569.41, 4832.18, 6167.7, 6036.95,
                      6112.7, 6856.22, 5404.81, 7018.05, 5997.85, 7788.76,
                      10074.6, 6462.51, 6693.28, 4372.86, 6378.23, 6059.71,
                      6149.59, 6646.38, 4969.92, 6331.37, 5545.88, 7217.46,
                      7250.62, 5806.84, 6640.78, 4428.42, 6071.97, 5822.55,
                      6565.54, 6085.72, 3789.19, 5551.75, 5647.85, 7793.31,
                      8451.95, 5944.98, 6794.73, 4330.63, 6191.34, 4908.19,
                      6290.19, 5858.66, 3680.21, 6670.84, 7109.51, 9848.86,
                      8569.3, 6356.76, 6512.48, 3973.79, 5357.6, 6066.43,
                      6094.59, 5971.08, 3615.52, 5084.69, 5727.27, 8064.68,
                      12106.44, 6578.35, 6916.8, 4292.27, 4649.01, 5002.15,
                      5582.42, 5816.26, 4596.61, 5258.87, 6168.64, 7574.49,
                      12911.75, 7781.32, 8437.32, 4408.92, 5030.3, 5639.82,
                      6182.28, 6101.05, 5084.53, 6475.31, 6297.43, 8044.54,
                      20070.73, 7190.51, 8659.21, 4061.72, 5870.01, 5918.62,
                      6534.62, 6355.64, 5080.35, 6609.1, 5256.2, 11252.89,
                      20620.7, 6133.07, 7320.88, 3529.9, 4894.45, 5030.46,
                      6401.84, 4719.18, 3383.97, 5783.76, 5688.71, 18983.1,
                      5991.28, 5370.92, 7148.67, 3965.1, 4211.94, 4820.68,
                      5999.19, 4843.2, 3573.4, 5495.06, 5556.34, 11092.12,
                      7075.46, 5725.44, 6618.39, 3837.38, 4647.61, 6022.35,
                      6432.97, 4299.99, 2774.29, 3607.17, 3871.35, 8960.92,
                      9508.72, 5944, 7456.76, 3408.47, 4131.93, 4761.51,
                      5957.19, 5597.19, 3362.13, 3871.92, 4367.69, 6845.31,
                      13820.78, 5134.35, 6417.99, 3519.6, 4351.41, 4880.54,
                      8388.05, 5044.76, 3256.84, 4050.02, 3323.64, 6249.77,
                      6221.91, 4643.97, 6982.6, 2897.86, 3728.67, 5105.1,
                      7963.1, 4724.01, 2976.17, 4240.76, 3924.49, 7018.69,
                      5295.76, 4211.31, 7393.56, 3429.33, 3518.23, 5578.73,
                      7996.25, 3988.77, 2464.31, 3544.09, 3678.82, 13651.83,
                      4872.13, 4106.9, 7754.89, 3653.53, 4103.14, 5826.39,
                      6820.22, 4528.24, 2634.38, 3793.95, 3483.88, 7390.28,
                      7411.9, 5735.58, 7445.22, 4066.45, 5190.52, 6123.23,
                      8419.44, 4271.86, 2341.85, 2787.81, 3127.24, 6019.96
                    ]
                  },
                  {
                    item: 'Wholesale Intraday Revenues',
                    data: [
                      1764.61, 1643.52, 1684.65, 1219.1, 1259.78, 1148.02,
                      1125.97, 1334.41, 1240.26, 1572.17, 1675.21, 1808.74,
                      1912.32, 1820.24, 1759.64, 1350.2, 1411.14, 1315.46,
                      1297.22, 1397.31, 1328.41, 1810.63, 1835.57, 1897.66,
                      1761.23, 1617.89, 1570.68, 1174.67, 1218.98, 1210.28,
                      1230.71, 1285.69, 1148.69, 1619.89, 1557.61, 1771.41,
                      1577.75, 1450.43, 1425.42, 1100.9, 1175.75, 1063.0,
                      1202.73, 1303.3, 1080.45, 1503.96, 1398.78, 1578.21,
                      1386.34, 1402.88, 1377.88, 973.14, 1040.37, 1001.79,
                      968.1, 1175.29, 997.48, 1396.75, 1279.76, 1480.99,
                      1306.74, 1364.23, 1292.42, 906.99, 1024.03, 938.26,
                      927.49, 1158.77, 956.82, 1273.34, 1303.51, 1308.49,
                      1418.61, 1312.35, 1359.68, 957.0, 1090.53, 992.92, 979.83,
                      1159.02, 975.44, 1293.47, 1317.43, 1353.1, 1583.84,
                      1283.31, 1170.8, 991.11, 1116.76, 923.81, 980.55, 1078.45,
                      879.93, 1314.43, 1259.34, 1373.55, 1715.7, 1292.33,
                      1195.59, 907.51, 1107.92, 1056.73, 1133.57, 1061.45,
                      829.16, 1191.58, 1151.26, 1357.42, 1196.92, 1226.05,
                      1220.54, 892.6, 994.36, 1071.75, 1091.64, 1186.36, 906.31,
                      1151.67, 1129.56, 1296.71, 1380.65, 1194.36, 1214.28,
                      771.98, 977.0, 941.46, 953.04, 1085.16, 862.91, 1133.07,
                      981.39, 1236.16, 1751.9, 1045.39, 1060.27, 697.88,
                      1017.42, 945.19, 951.53, 1053.24, 805.57, 1035.78, 895.01,
                      1152.41, 1169.8, 944.18, 1061.26, 702.11, 967.84, 920.36,
                      1024.47, 983.76, 642.38, 896.99, 920.96, 1242.32, 1373.19,
                      974.27, 1089.98, 703.95, 990.77, 784.38, 978.01, 942.45,
                      610.05, 1087.41, 1164.84, 1597.4, 1384.16, 1024.38,
                      1043.75, 645.0, 863.06, 960.69, 954.97, 959.07, 597.97,
                      841.95, 930.16, 1295.51, 1980.99, 1050.49, 1108.03,
                      689.15, 742.12, 794.87, 871.93, 943.48, 745.92, 868.23,
                      995.38, 1210.66, 2051.76, 1268.9, 1331.15, 709.36, 810.64,
                      896.13, 964.08, 983.45, 817.66, 1057.16, 1015.17, 1289.86,
                      3328.55, 1161.62, 1378.8, 652.82, 942.36, 939.68, 1013.43,
                      1029.12, 826.85, 1069.49, 857.54, 1900.25, 3331.27, 986.4,
                      1180.86, 568.78, 794.6, 799.21, 1004.45, 752.72, 566.38,
                      952.6, 918.87, 3113.29, 978.96, 865.5, 1147.26, 636.07,
                      682.63, 778.23, 943.41, 792.75, 599.58, 914.45, 920.1,
                      1830.15, 1160.95, 932.57, 1051.99, 615.18, 751.87, 950.76,
                      1021.99, 700.16, 484.11, 614.53, 627.87, 1469.35, 1536.6,
                      975.7, 1186.21, 546.23, 658.76, 750.3, 932.35, 912.22,
                      578.88, 652.5, 702.71, 1121.27, 2322.68, 845.14, 1035.22,
                      565.09, 701.8, 784.45, 1323.16, 837.78, 567.8, 677.8,
                      550.89, 1023.37, 1018.77, 757.38, 1111.16, 474.14, 617.61,
                      829.24, 1249.43, 780.13, 502.58, 712.98, 637.18, 1129.94,
                      857.95, 709.07, 1180.64, 587.52, 576.89, 896.38, 1262.33,
                      658.02, 426.71, 607.0, 591.63, 2381.88, 803.96, 686.93,
                      1237.15, 651.77, 666.23, 934.01, 1078.74, 751.54, 465.96,
                      636.73, 567.97, 1212.64, 1193.08, 924.77, 1232.18, 649.99,
                      825.75, 977.58, 1320.33, 698.8, 414.73, 466.22, 509.2,
                      987.15, 1193.08, 924.77, 1232.18, 649.99, 825.75, 977.58,
                      1320.33, 698.8, 414.73, 466.22, 509.2, 987.15, 1193.08,
                      924.77, 1232.18, 649.99, 825.75, 977.58, 1320.33, 698.8,
                      414.73, 466.22, 509.2, 987.15, 1193.08, 924.77, 1232.18,
                      649.99, 825.75, 977.58, 1320.33, 698.8, 414.73, 466.22,
                      509.2, 987.15, 1193.08, 924.77, 1232.18, 649.99, 825.75,
                      977.58, 1320.33, 698.8, 414.73, 466.22, 509.2, 987.15,
                      1193.08, 924.77, 1232.18, 649.99, 825.75, 977.58, 1320.33,
                      698.8, 414.73, 466.22, 509.2, 987.15, 1193.08, 924.77,
                      1232.18, 649.99, 825.75, 977.58, 1320.33, 698.8, 414.73,
                      466.22, 509.2, 987.15, 1193.08, 924.77, 1232.18, 649.99,
                      825.75, 977.58, 1320.33, 698.8, 414.73, 466.22, 509.2,
                      987.15, 1193.08, 924.77, 1232.18, 649.99, 825.75, 977.58,
                      1320.33, 698.8, 414.73, 466.22, 509.2, 987.15, 1193.08,
                      924.77, 1232.18, 649.99, 825.75, 977.58, 1320.33, 698.8,
                      414.73, 466.22, 509.2, 987.15, 1193.08, 924.77, 1232.18,
                      649.99, 825.75, 977.58, 1320.33, 698.8, 414.73, 466.22,
                      509.2, 987.15, 1193.08, 924.77, 1232.18, 649.99, 825.75,
                      977.58, 1320.33, 698.8, 414.73, 466.22, 509.2, 987.15,
                      1193.08, 924.77, 1232.18, 649.99, 825.75, 977.58, 1320.33,
                      698.8, 414.73, 466.22, 509.2, 987.15, 1193.08, 924.77,
                      1232.18, 649.99, 825.75, 977.58, 1320.33, 698.8, 414.73,
                      466.22, 509.2, 987.15, 1193.08, 924.77, 1232.18, 649.99,
                      825.75, 977.58, 1320.33, 698.8, 414.73, 466.22, 509.2,
                      987.15, 1193.08, 924.77, 1232.18, 649.99, 825.75, 977.58,
                      1320.33, 698.8, 414.73, 466.22, 509.2, 987.15, 1193.08,
                      924.77, 1232.18, 649.99, 825.75, 977.58, 1320.33, 698.8,
                      414.73, 466.22, 509.2, 987.15, 1193.08, 924.77, 1232.18,
                      649.99, 825.75, 977.58, 1320.33, 698.8, 414.73, 466.22,
                      509.2, 987.15, 1193.08, 924.77, 1232.18, 649.99, 825.75,
                      977.58, 1320.33, 698.8, 414.73, 466.22, 509.2, 987.15,
                      1193.08, 924.77, 1232.18, 649.99, 825.75, 977.58, 1320.33,
                      698.8, 414.73, 466.22, 509.2, 987.15, 1193.08, 924.77,
                      1232.18, 649.99, 825.75, 977.58, 1320.33, 698.8, 414.73,
                      466.22, 509.2, 987.15, 1193.08, 924.77, 1232.18, 649.99,
                      825.75, 977.58, 1320.33, 698.8, 414.73, 466.22, 509.2,
                      987.15, 1193.08, 924.77, 1232.18, 649.99, 825.75, 977.58,
                      1320.33, 698.8, 414.73, 466.22, 509.2, 987.15, 1193.08,
                      924.77, 1232.18, 649.99, 825.75, 977.58, 1320.33, 698.8,
                      414.73, 466.22, 509.2, 987.15
                    ]
                  },
                  {
                    item: 'Capacity Market Revenues',
                    data: [
                      1343.23, 1251.95, 1386.08, 1341.37, 1386.08, 1341.37,
                      1386.08, 1386.08, 1341.37, 1386.08, 1341.37, 1386.08,
                      1544.92, 1445.25, 1544.92, 1495.08, 1544.92, 1495.08,
                      1544.92, 1544.92, 1495.08, 1544.92, 1495.08, 1544.92,
                      2446.03, 2209.32, 2446.03, 2367.12, 2446.03, 2367.12,
                      2446.03, 2446.03, 2367.12, 2446.03, 2367.12, 2446.03,
                      2455.96, 2218.29, 2455.96, 2376.74, 2455.96, 2376.74,
                      2455.96, 2455.96, 2376.74, 2455.96, 2376.74, 2455.96,
                      2009.42, 1814.96, 2009.42, 1944.6, 2009.42, 1944.6,
                      2009.42, 2009.42, 1944.6, 2009.42, 1944.6, 2009.42,
                      1884.22, 1762.66, 1884.22, 1823.44, 1884.22, 1823.44,
                      1884.22, 1884.22, 1823.44, 1884.22, 1823.44, 1884.22,
                      1364.38, 1232.35, 1364.38, 1320.37, 1364.38, 1320.37,
                      1364.38, 1364.38, 1320.37, 1364.38, 1320.37, 1364.38,
                      2736.53, 2471.7, 2736.53, 2648.25, 2736.53, 2648.25,
                      2736.53, 2736.53, 2648.25, 2736.53, 2648.25, 2736.53,
                      982.8, 887.69, 982.8, 951.1, 982.8, 951.1, 982.8, 982.8,
                      951.1, 982.8, 951.1, 982.8, 1327.66, 1242.01, 1327.66,
                      1284.84, 1327.66, 1284.84, 1327.66, 1327.66, 1284.84,
                      1327.66, 1284.84, 1327.66, 1873.42, 1692.12, 1873.42,
                      1812.99, 1873.42, 1812.99, 1873.42, 1873.42, 1812.99,
                      1873.42, 1812.99, 1873.42, 1655.91, 1495.66, 1655.91,
                      1602.49, 1655.91, 1602.49, 1655.91, 1655.91, 1602.49,
                      1655.91, 1602.49, 1655.91, 1458.99, 1317.8, 1458.99,
                      1411.92, 1458.99, 1411.92, 1458.99, 1458.99, 1411.92,
                      1458.99, 1411.92, 1458.99, 1432.0, 1339.61, 1432.0,
                      1385.8, 1432.0, 1385.8, 1432.0, 1432.0, 1385.8, 1432.0,
                      1385.8, 1432.0, 1309.85, 1183.09, 1309.85, 1267.59,
                      1309.85, 1267.59, 1309.85, 1309.85, 1267.59, 1309.85,
                      1267.59, 1309.85, 1002.0, 905.04, 1002.0, 969.68, 1002.0,
                      969.68, 1002.0, 1002.0, 969.68, 1002.0, 969.68, 1002.0,
                      881.74, 796.41, 881.74, 853.3, 881.74, 853.3, 881.74,
                      881.74, 853.3, 881.74, 853.3, 881.74, 777.95, 727.76,
                      777.95, 752.85, 777.95, 752.85, 777.95, 777.95, 752.85,
                      777.95, 752.85, 777.95, 687.67, 621.12, 687.67, 665.49,
                      687.67, 665.49, 687.67, 687.67, 665.49, 687.67, 665.49,
                      687.67, 630.31, 569.31, 630.31, 609.98, 630.31, 609.98,
                      630.31, 630.31, 609.98, 630.31, 609.98, 630.31, 606.03,
                      547.38, 606.03, 586.48, 606.03, 586.48, 606.03, 606.03,
                      586.48, 606.03, 586.48, 606.03, 580.63, 543.17, 580.63,
                      561.9, 580.63, 561.9, 580.63, 580.63, 561.9, 580.63,
                      561.9, 580.63, 557.9, 503.91, 557.9, 539.9, 557.9, 539.9,
                      557.9, 557.9, 539.9, 557.9, 539.9, 557.9, 535.07, 483.29,
                      535.07, 517.81, 535.07, 517.81, 535.07, 535.07, 517.81,
                      535.07, 517.81, 535.07, 514.38, 464.6, 514.38, 497.79,
                      514.38, 497.79, 514.38, 514.38, 497.79, 514.38, 497.79,
                      514.38, 492.75, 460.96, 492.75, 476.85, 492.75, 476.85,
                      492.75, 492.75, 476.85, 492.75, 476.85, 492.75, 476.75,
                      430.61, 476.75, 461.37, 476.75, 461.37, 476.75, 476.75,
                      461.37, 476.75, 461.37, 476.11, 476.75, 430.61, 476.75,
                      461.37, 476.75, 461.37, 476.75, 476.75, 461.37, 476.75,
                      461.37, 476.11, 476.75, 430.61, 476.75, 461.37, 476.75,
                      461.37, 476.75, 476.75, 461.37, 476.75, 461.37, 476.11,
                      476.75, 430.61, 476.75, 461.37, 476.75, 461.37, 476.75,
                      476.75, 461.37, 476.75, 461.37, 476.11, 476.75, 430.61,
                      476.75, 461.37, 476.75, 461.37, 476.75, 476.75, 461.37,
                      476.75, 461.37, 476.11, 476.75, 430.61, 476.75, 461.37,
                      476.75, 461.37, 476.75, 476.75, 461.37, 476.75, 461.37,
                      476.11, 476.75, 430.61, 476.75, 461.37, 476.75, 461.37,
                      476.75, 476.75, 461.37, 476.75, 461.37, 476.11, 476.75,
                      430.61, 476.75, 461.37, 476.75, 461.37, 476.75, 476.75,
                      461.37, 476.75, 461.37, 476.11, 476.75, 430.61, 476.75,
                      461.37, 476.75, 461.37, 476.75, 476.75, 461.37, 476.75,
                      461.37, 476.11, 476.75, 430.61, 476.75, 461.37, 476.75,
                      461.37, 476.75, 476.75, 461.37, 476.75, 461.37, 476.11,
                      476.75, 430.61, 476.75, 461.37, 476.75, 461.37, 476.75,
                      476.75, 461.37, 476.75, 461.37, 476.11, 476.75, 430.61,
                      476.75, 461.37, 476.75, 461.37, 476.75, 476.75, 461.37,
                      476.75, 461.37, 476.11, 476.75, 430.61, 476.75, 461.37,
                      476.75, 461.37, 476.75, 476.75, 461.37, 476.75, 461.37,
                      476.11, 476.75, 430.61, 476.75, 461.37, 476.75, 461.37,
                      476.75, 476.75, 461.37, 476.75, 461.37, 476.11, 476.75,
                      430.61, 476.75, 461.37, 476.75, 461.37, 476.75, 476.75,
                      461.37, 476.75, 461.37, 476.11, 476.75, 430.61, 476.75,
                      461.37, 476.75, 461.37, 476.75, 476.75, 461.37, 476.75,
                      461.37, 476.11, 476.75, 430.61, 476.75, 461.37, 476.75,
                      461.37, 476.75, 476.75, 461.37, 476.75, 461.37, 476.11,
                      476.75, 430.61, 476.75, 461.37, 476.75, 461.37, 476.75,
                      476.75, 461.37, 476.75, 461.37, 476.11, 476.75, 430.61,
                      476.75, 461.37, 476.75, 461.37, 476.75, 476.75, 461.37,
                      476.75, 461.37, 476.11, 476.75, 430.61, 476.75, 461.37,
                      476.75, 461.37, 476.75, 476.75, 461.37, 476.75, 461.37,
                      476.11, 476.75, 430.61, 476.75, 461.37, 476.75, 461.37,
                      476.75, 476.75, 461.37, 476.75, 461.37, 476.11, 476.75,
                      430.61, 476.75, 461.37, 476.75, 461.37, 476.75, 476.75,
                      461.37, 476.75, 461.37, 476.11, 476.75, 430.61, 476.75,
                      461.37, 476.75, 461.37, 476.75, 476.75, 461.37, 476.75,
                      461.37, 476.11, 476.75, 430.61, 476.75, 461.37, 476.75,
                      461.37, 476.75, 476.75, 461.37, 476.75, 461.37, 476.11
                    ]
                  },
                  {
                    item: 'Balancing Mechanism Revenues',
                    data: [
                      1128.79, 1018.46, 1120.23, 1102.45, 1364.02, 1187.72,
                      1078.13, 1318.87, 1355.43, 1284.65, 1034.97, 996.97,
                      1601.33, 1538.65, 1940.18, 2165.14, 1774.65, 1810.88,
                      1721.94, 1991.74, 2041.21, 1617.42, 1624.14, 1524.21,
                      2681.75, 2309.06, 2496.04, 3385.58, 3152.13, 2253.18,
                      2567.95, 2880.62, 3185.49, 2680.71, 2923.55, 2351.77,
                      3490.28, 2877.8, 3272.63, 3527.44, 4174.83, 3680.2,
                      4084.28, 3817.91, 4129.85, 3880.03, 3618.16, 3652.56,
                      4316.08, 3828.22, 4125.0, 4780.34, 4719.33, 4400.3,
                      4280.49, 4677.21, 5177.3, 4248.88, 4308.05, 4688.99,
                      4185.98, 3861.87, 4183.8, 4529.58, 4777.18, 3804.81,
                      3847.41, 4478.42, 4452.28, 4168.01, 4364.69, 4227.69,
                      4750.66, 4126.69, 4462.75, 4933.49, 4735.2, 4177.05,
                      4258.49, 4493.76, 4628.27, 4482.7, 4738.66, 4165.36,
                      5015.04, 4614.27, 4543.14, 5296.07, 4843.84, 4121.48,
                      4617.78, 4425.24, 4684.12, 4269.23, 5144.3, 4676.65,
                      5309.62, 4486.74, 4874.1, 5339.58, 4852.5, 4401.18,
                      4816.35, 4290.95, 4742.43, 4867.84, 5534.2, 5158.33,
                      5276.46, 4914.83, 4523.74, 5026.77, 4354.58, 3956.66,
                      4586.6, 3789.15, 4947.1, 5039.05, 4744.93, 5543.06,
                      5878.04, 5258.76, 4822.65, 4733.47, 4492.11, 4333.22,
                      4343.65, 4941.42, 5124.14, 4980.5, 4851.52, 5940.39,
                      7709.87, 5450.34, 5087.91, 5277.84, 5008.57, 4934.8,
                      4670.37, 4680.31, 4990.4, 4487.15, 5320.87, 5782.17,
                      5893.75, 4935.32, 4814.66, 4679.03, 5172.14, 4955.95,
                      4650.31, 4261.11, 4995.54, 5127.92, 4591.46, 5902.55,
                      7302.48, 4889.5, 4986.16, 4899.56, 5399.9, 4915.28,
                      5367.48, 4425.31, 5382.17, 5214.44, 5757.23, 8326.76,
                      7927.42, 5881.3, 6107.16, 5769.87, 5264.93, 5042.68,
                      5440.8, 4563.82, 5322.39, 5542.49, 6083.26, 7461.5,
                      9837.73, 6005.92, 6167.14, 5680.21, 5899.74, 5592.46,
                      5840.08, 4872.65, 5462.3, 5447.17, 6230.32, 6860.71,
                      12397.15, 5532.62, 5761.06, 5893.79, 5713.0, 5997.22,
                      5679.65, 5017.26, 5437.3, 5703.24, 6014.54, 6485.7,
                      15689.31, 5928.81, 6352.34, 5925.21, 5987.26, 5607.02,
                      5845.31, 5461.26, 5253.2, 5650.12, 5414.75, 7451.31,
                      11739.34, 5591.35, 5906.21, 6230.73, 5771.28, 6035.49,
                      5771.62, 5763.3, 5157.41, 5658.91, 6259.5, 7585.9,
                      6117.18, 5886.02, 6666.1, 5715.27, 5199.66, 5651.01,
                      6061.83, 5168.3, 5072.21, 5647.13, 5931.77, 8059.74,
                      6252.5, 5720.85, 6501.09, 6007.38, 5465.36, 5933.35,
                      6154.01, 5501.55, 5167.32, 5333.34, 5847.49, 6607.29,
                      9868.58, 5627.98, 6092.08, 5884.92, 6287.55, 6350.53,
                      6221.84, 5002.53, 4986.66, 5789.34, 6263.03, 5970.38,
                      7837.45, 5700.78, 6045.36, 6928.22, 5856.57, 5233.54,
                      6017.83, 5493.68, 5609.49, 5880.45, 6818.03, 6190.1,
                      7984.35, 6257.11, 6497.5, 6006.53, 5347.86, 5779.11,
                      6188.82, 5301.24, 5364.21, 5941.67, 6053.33, 7271.75,
                      7914.94, 5601.47, 5700.6, 6187.13, 5393.58, 5646.92,
                      6509.69, 4963.45, 5766.01, 6032.08, 6249.31, 6697.2,
                      6222.03, 6130.19, 5833.6, 5737.89, 6332.72, 6016.12,
                      6158.53, 5319.92, 5374.72, 6127.38, 6126.84, 6357.62,
                      6640.78, 5753.19, 5550.94, 6224.08, 6015.68, 5112.13,
                      6252.52, 5156.56, 4834.97, 5892.47, 6917.51, 5885.22,
                      6640.78, 5753.19, 5550.94, 6224.08, 6015.68, 5112.13,
                      6252.52, 5156.56, 4834.97, 5892.47, 6917.51, 5885.22,
                      6640.78, 5753.19, 5550.94, 6224.08, 6015.68, 5112.13,
                      6252.52, 5156.56, 4834.97, 5892.47, 6917.51, 5885.22,
                      6640.78, 5753.19, 5550.94, 6224.08, 6015.68, 5112.13,
                      6252.52, 5156.56, 4834.97, 5892.47, 6917.51, 5885.22,
                      6640.78, 5753.19, 5550.94, 6224.08, 6015.68, 5112.13,
                      6252.52, 5156.56, 4834.97, 5892.47, 6917.51, 5885.22,
                      6640.78, 5753.19, 5550.94, 6224.08, 6015.68, 5112.13,
                      6252.52, 5156.56, 4834.97, 5892.47, 6917.51, 5885.22,
                      6640.78, 5753.19, 5550.94, 6224.08, 6015.68, 5112.13,
                      6252.52, 5156.56, 4834.97, 5892.47, 6917.51, 5885.22,
                      6640.78, 5753.19, 5550.94, 6224.08, 6015.68, 5112.13,
                      6252.52, 5156.56, 4834.97, 5892.47, 6917.51, 5885.22,
                      6640.78, 5753.19, 5550.94, 6224.08, 6015.68, 5112.13,
                      6252.52, 5156.56, 4834.97, 5892.47, 6917.51, 5885.22,
                      6640.78, 5753.19, 5550.94, 6224.08, 6015.68, 5112.13,
                      6252.52, 5156.56, 4834.97, 5892.47, 6917.51, 5885.22,
                      6640.78, 5753.19, 5550.94, 6224.08, 6015.68, 5112.13,
                      6252.52, 5156.56, 4834.97, 5892.47, 6917.51, 5885.22,
                      6640.78, 5753.19, 5550.94, 6224.08, 6015.68, 5112.13,
                      6252.52, 5156.56, 4834.97, 5892.47, 6917.51, 5885.22,
                      6640.78, 5753.19, 5550.94, 6224.08, 6015.68, 5112.13,
                      6252.52, 5156.56, 4834.97, 5892.47, 6917.51, 5885.22,
                      6640.78, 5753.19, 5550.94, 6224.08, 6015.68, 5112.13,
                      6252.52, 5156.56, 4834.97, 5892.47, 6917.51, 5885.22,
                      6640.78, 5753.19, 5550.94, 6224.08, 6015.68, 5112.13,
                      6252.52, 5156.56, 4834.97, 5892.47, 6917.51, 5885.22,
                      6640.78, 5753.19, 5550.94, 6224.08, 6015.68, 5112.13,
                      6252.52, 5156.56, 4834.97, 5892.47, 6917.51, 5885.22,
                      6640.78, 5753.19, 5550.94, 6224.08, 6015.68, 5112.13,
                      6252.52, 5156.56, 4834.97, 5892.47, 6917.51, 5885.22,
                      6640.78, 5753.19, 5550.94, 6224.08, 6015.68, 5112.13,
                      6252.52, 5156.56, 4834.97, 5892.47, 6917.51, 5885.22,
                      6640.78, 5753.19, 5550.94, 6224.08, 6015.68, 5112.13,
                      6252.52, 5156.56, 4834.97, 5892.47, 6917.51, 5885.22,
                      6640.78, 5753.19, 5550.94, 6224.08, 6015.68, 5112.13,
                      6252.52, 5156.56, 4834.97, 5892.47, 6917.51, 5885.22,
                      6640.78, 5753.19, 5550.94, 6224.08, 6015.68, 5112.13,
                      6252.52, 5156.56, 4834.97, 5892.47, 6917.51, 5885.22,
                      6640.78, 5753.19, 5550.94, 6224.08, 6015.68, 5112.13,
                      6252.52, 5156.56, 4834.97, 5892.47, 6917.51, 5885.22,
                      6640.78, 5753.19, 5550.94, 6224.08, 6015.68, 5112.13,
                      6252.52, 5156.56, 4834.97, 5892.47, 6917.51, 5885.22,
                      6640.78, 5753.19, 5550.94, 6224.08, 6015.68, 5112.13,
                      6252.52, 5156.56, 4834.97, 5892.47, 6917.51, 5885.22
                    ]
                  },
                  {
                    item: 'Frequency Response Revenues',
                    data: [
                      295.17, 223.19, 265.63, 122.75, 141.12, 101.3, 91.72,
                      166.26, 194.2, 324.5, 317.32, 328.67, 383.84, 288.01,
                      285.06, 179.41, 145.14, 223.26, 158.6, 211.4, 299.6,
                      358.7, 336.18, 403.1, 420.23, 387.24, 253.07, 202.24,
                      168.91, 158.0, 120.63, 228.79, 305.66, 454.81, 363.15,
                      461.74, 391.49, 292.24, 304.27, 180.02, 194.37, 184.78,
                      210.36, 220.24, 203.37, 361.89, 307.27, 356.72, 477.28,
                      350.52, 458.3, 277.46, 244.74, 202.42, 147.52, 331.72,
                      330.16, 493.52, 430.75, 401.25, 390.59, 336.44, 332.25,
                      237.05, 130.61, 199.86, 191.63, 191.26, 338.85, 329.05,
                      389.93, 422.73, 516.8, 321.02, 301.12, 279.6, 183.84,
                      191.27, 130.47, 260.14, 370.59, 425.44, 392.68, 451.65,
                      450.75, 428.5, 397.15, 322.88, 276.85, 266.59, 90.34,
                      409.76, 368.4, 545.58, 380.41, 429.84, 922.95, 537.35,
                      446.02, 381.47, 367.76, 337.41, 217.78, 461.46, 413.65,
                      561.08, 503.31, 529.57, 532.76, 467.56, 506.84, 342.01,
                      304.6, 305.48, 288.12, 535.58, 484.91, 569.15, 526.96,
                      522.93, 607.41, 332.6, 525.78, 314.33, 345.63, 239.42,
                      240.88, 378.17, 347.91, 535.73, 544.77, 452.29, 1604.72,
                      506.77, 375.17, 279.67, 404.6, 241.53, 193.93, 375.25,
                      400.57, 573.85, 420.89, 465.25, 548.02, 487.69, 434.3,
                      252.28, 380.27, 313.19, 264.28, 472.71, 493.32, 428.22,
                      491.85, 488.82, 702.67, 550.19, 471.81, 362.38, 413.78,
                      321.02, 229.86, 424.31, 386.77, 578.58, 656.1, 800.48,
                      658.46, 472.44, 445.87, 326.22, 396.17, 338.16, 271.88,
                      422.72, 370.94, 528.3, 473.82, 572.07, 1100.13, 424.89,
                      470.05, 302.03, 298.48, 297.02, 230.47, 473.59, 376.16,
                      529.34, 467.23, 496.56, 766.64, 678.0, 437.03, 320.15,
                      373.97, 334.36, 244.95, 455.28, 366.56, 572.43, 470.39,
                      554.56, 2119.6, 553.63, 532.77, 290.45, 412.42, 345.91,
                      221.6, 505.13, 431.97, 520.81, 460.73, 1415.47, 1587.8,
                      442.91, 551.52, 262.0, 402.89, 297.63, 294.51, 298.94,
                      391.9, 566.92, 437.07, 1772.17, 535.15, 399.1, 499.73,
                      275.4, 338.9, 367.5, 290.18, 441.81, 423.78, 601.3,
                      577.65, 1108.88, 664.22, 491.67, 394.89, 263.85, 364.87,
                      316.07, 380.28, 367.76, 453.13, 489.72, 314.46, 834.73,
                      735.26, 560.7, 451.31, 233.05, 259.81, 240.47, 258.45,
                      484.25, 497.09, 478.1, 317.06, 629.83, 1663.78, 499.92,
                      483.49, 247.64, 327.23, 349.16, 433.05, 540.45, 528.47,
                      468.65, 348.95, 572.67, 569.92, 405.26, 425.14, 263.07,
                      388.76, 423.17, 366.43, 476.88, 374.33, 512.46, 323.36,
                      514.27, 423.92, 515.85, 477.35, 487.47, 327.7, 397.14,
                      419.29, 398.0, 380.39, 502.55, 265.37, 2227.38, 487.63,
                      472.66, 492.76, 691.59, 338.37, 400.32, 371.35, 482.05,
                      472.02, 450.9, 302.6, 693.97, 541.95, 429.57, 769.3,
                      266.81, 314.5, 393.96, 382.73, 386.78, 422.99, 320.29,
                      267.41, 561.05, 541.95, 429.57, 769.3, 266.81, 314.5,
                      393.96, 382.73, 386.78, 422.99, 320.29, 267.41, 561.05,
                      541.95, 429.57, 769.3, 266.81, 314.5, 393.96, 382.73,
                      386.78, 422.99, 320.29, 267.41, 561.05, 541.95, 429.57,
                      769.3, 266.81, 314.5, 393.96, 382.73, 386.78, 422.99,
                      320.29, 267.41, 561.05, 541.95, 429.57, 769.3, 266.81,
                      314.5, 393.96, 382.73, 386.78, 422.99, 320.29, 267.41,
                      561.05, 541.95, 429.57, 769.3, 266.81, 314.5, 393.96,
                      382.73, 386.78, 422.99, 320.29, 267.41, 561.05, 541.95,
                      429.57, 769.3, 266.81, 314.5, 393.96, 382.73, 386.78,
                      422.99, 320.29, 267.41, 561.05, 541.95, 429.57, 769.3,
                      266.81, 314.5, 393.96, 382.73, 386.78, 422.99, 320.29,
                      267.41, 561.05, 541.95, 429.57, 769.3, 266.81, 314.5,
                      393.96, 382.73, 386.78, 422.99, 320.29, 267.41, 561.05,
                      541.95, 429.57, 769.3, 266.81, 314.5, 393.96, 382.73,
                      386.78, 422.99, 320.29, 267.41, 561.05, 541.95, 429.57,
                      769.3, 266.81, 314.5, 393.96, 382.73, 386.78, 422.99,
                      320.29, 267.41, 561.05, 541.95, 429.57, 769.3, 266.81,
                      314.5, 393.96, 382.73, 386.78, 422.99, 320.29, 267.41,
                      561.05, 541.95, 429.57, 769.3, 266.81, 314.5, 393.96,
                      382.73, 386.78, 422.99, 320.29, 267.41, 561.05, 541.95,
                      429.57, 769.3, 266.81, 314.5, 393.96, 382.73, 386.78,
                      422.99, 320.29, 267.41, 561.05, 541.95, 429.57, 769.3,
                      266.81, 314.5, 393.96, 382.73, 386.78, 422.99, 320.29,
                      267.41, 561.05, 541.95, 429.57, 769.3, 266.81, 314.5,
                      393.96, 382.73, 386.78, 422.99, 320.29, 267.41, 561.05,
                      541.95, 429.57, 769.3, 266.81, 314.5, 393.96, 382.73,
                      386.78, 422.99, 320.29, 267.41, 561.05, 541.95, 429.57,
                      769.3, 266.81, 314.5, 393.96, 382.73, 386.78, 422.99,
                      320.29, 267.41, 561.05, 541.95, 429.57, 769.3, 266.81,
                      314.5, 393.96, 382.73, 386.78, 422.99, 320.29, 267.41,
                      561.05, 541.95, 429.57, 769.3, 266.81, 314.5, 393.96,
                      382.73, 386.78, 422.99, 320.29, 267.41, 561.05, 541.95,
                      429.57, 769.3, 266.81, 314.5, 393.96, 382.73, 386.78,
                      422.99, 320.29, 267.41, 561.05, 541.95, 429.57, 769.3,
                      266.81, 314.5, 393.96, 382.73, 386.78, 422.99, 320.29,
                      267.41, 561.05, 541.95, 429.57, 769.3, 266.81, 314.5,
                      393.96, 382.73, 386.78, 422.99, 320.29, 267.41, 561.05,
                      541.95, 429.57, 769.3, 266.81, 314.5, 393.96, 382.73,
                      386.78, 422.99, 320.29, 267.41, 561.05
                    ]
                  },
                  {
                    item: 'Avg. Cycles per day',
                    data: [
                      1.27, 1.31, 1.31, 1.4, 1.38, 1.34, 1.35, 1.46, 1.43, 1.37,
                      1.33, 1.3, 1.33, 1.36, 1.34, 1.46, 1.47, 1.42, 1.34, 1.56,
                      1.46, 1.46, 1.38, 1.32, 1.31, 1.35, 1.41, 1.5, 1.47, 1.4,
                      1.49, 1.62, 1.48, 1.43, 1.37, 1.33, 1.41, 1.41, 1.36,
                      1.48, 1.56, 1.43, 1.48, 1.6, 1.53, 1.62, 1.4, 1.39, 1.34,
                      1.43, 1.39, 1.35, 1.48, 1.32, 1.33, 1.59, 1.3, 1.46, 1.39,
                      1.37, 1.33, 1.39, 1.38, 1.39, 1.52, 1.31, 1.28, 1.55,
                      1.28, 1.45, 1.47, 1.33, 1.38, 1.44, 1.47, 1.34, 1.52, 1.4,
                      1.42, 1.54, 1.35, 1.46, 1.43, 1.28, 1.42, 1.4, 1.27, 1.37,
                      1.46, 1.27, 1.46, 1.43, 1.32, 1.37, 1.34, 1.25, 1.35,
                      1.37, 1.27, 1.25, 1.45, 1.4, 1.42, 1.28, 1.13, 1.38, 1.18,
                      1.26, 1.26, 1.23, 1.32, 1.22, 1.37, 1.4, 1.52, 1.35, 1.24,
                      1.4, 1.21, 1.25, 1.17, 1.33, 1.35, 1.15, 1.41, 1.51, 1.33,
                      1.47, 1.18, 1.29, 1.12, 1.28, 1.11, 1.34, 1.26, 1.01,
                      1.56, 1.47, 1.42, 1.45, 1.12, 1.29, 1.04, 1.25, 1.16,
                      1.22, 1.23, 1.08, 1.48, 1.26, 1.4, 1.35, 0.89, 1.11, 0.99,
                      1.24, 1.17, 1.14, 1.18, 1.21, 1.45, 1.22, 1.38, 1.31,
                      0.87, 1.22, 1.19, 1.28, 1.12, 1.06, 1.11, 1.03, 1.29,
                      1.43, 1.37, 1.29, 0.97, 1.13, 1.02, 1.3, 1.04, 1.28, 1.15,
                      0.96, 1.13, 1.28, 1.37, 1.32, 1.07, 1.12, 1.04, 1.26,
                      1.08, 1.33, 1.28, 1.03, 1.28, 1.37, 1.24, 1.36, 1.12,
                      1.23, 1.0, 1.3, 1.02, 1.22, 1.34, 0.95, 1.49, 1.4, 1.35,
                      1.38, 1.01, 1.2, 1.05, 1.21, 1.0, 1.07, 1.2, 0.91, 1.3,
                      1.28, 1.48, 1.14, 0.85, 1.13, 1.01, 1.3, 1.06, 1.03, 1.01,
                      0.94, 1.09, 1.19, 1.35, 1.19, 0.88, 1.11, 0.99, 1.15,
                      0.98, 1.23, 0.99, 0.81, 1.09, 1.16, 1.4, 1.08, 0.73, 0.86,
                      0.76, 1.07, 0.95, 1.04, 1.13, 0.78, 1.05, 1.12, 1.33,
                      1.21, 0.79, 0.86, 0.74, 0.96, 0.8, 0.93, 1.05, 0.81, 1.02,
                      1.19, 1.32, 1.26, 0.75, 0.79, 0.67, 1.04, 0.73, 0.92, 1.0,
                      0.69, 0.97, 1.21, 1.32, 1.15, 0.68, 0.83, 0.66, 1.05, 0.7,
                      0.88, 0.99, 0.69, 0.89, 1.2, 1.35, 1.01, 0.57, 0.8, 0.69,
                      0.98, 0.68, 0.87, 0.94, 0.67, 0.92, 1.07, 1.29, 1.09,
                      0.55, 0.79, 0.63, 0.94, 0.77, 0.95, 0.98, 0.68, 1.07,
                      1.04, 1.36, 0.95, 0.51, 0.61, 0.63, 0.99, 0.77, 0.95,
                      0.98, 0.68, 1.07, 1.04, 1.36, 0.95, 0.51, 0.61, 0.63,
                      0.99, 0.77, 0.95, 0.98, 0.68, 1.07, 1.04, 1.36, 0.95,
                      0.51, 0.61, 0.63, 0.99, 0.77, 0.95, 0.98, 0.68, 1.07,
                      1.04, 1.36, 0.95, 0.51, 0.61, 0.63, 0.99, 0.77, 0.95,
                      0.98, 0.68, 1.07, 1.04, 1.36, 0.95, 0.51, 0.61, 0.63,
                      0.99, 0.77, 0.95, 0.98, 0.68, 1.07, 1.04, 1.36, 0.95,
                      0.51, 0.61, 0.63, 0.99, 0.77, 0.95, 0.98, 0.68, 1.07,
                      1.04, 1.36, 0.95, 0.51, 0.61, 0.63, 0.99, 0.77, 0.95,
                      0.98, 0.68, 1.07, 1.04, 1.36, 0.95, 0.51, 0.61, 0.63,
                      0.99, 0.77, 0.95, 0.98, 0.68, 1.07, 1.04, 1.36, 0.95,
                      0.51, 0.61, 0.63, 0.99, 0.77, 0.95, 0.98, 0.68, 1.07,
                      1.04, 1.36, 0.95, 0.51, 0.61, 0.63, 0.99, 0.77, 0.95,
                      0.98, 0.68, 1.07, 1.04, 1.36, 0.95, 0.51, 0.61, 0.63,
                      0.99, 0.77, 0.95, 0.98, 0.68, 1.07, 1.04, 1.36, 0.95,
                      0.51, 0.61, 0.63, 0.99, 0.77, 0.95, 0.98, 0.68, 1.07,
                      1.04, 1.36, 0.95, 0.51, 0.61, 0.63, 0.99, 0.77, 0.95,
                      0.98, 0.68, 1.07, 1.04, 1.36, 0.95, 0.51, 0.61, 0.63,
                      0.99, 0.77, 0.95, 0.98, 0.68, 1.07, 1.04, 1.36, 0.95,
                      0.51, 0.61, 0.63, 0.99, 0.77, 0.95, 0.98, 0.68, 1.07,
                      1.04, 1.36, 0.95, 0.51, 0.61, 0.63, 0.99, 0.77, 0.95,
                      0.98, 0.68, 1.07, 1.04, 1.36, 0.95, 0.51, 0.61, 0.63,
                      0.99, 0.77, 0.95, 0.98, 0.68, 1.07, 1.04, 1.36, 0.95,
                      0.51, 0.61, 0.63, 0.99, 0.77, 0.95, 0.98, 0.68, 1.07,
                      1.04, 1.36, 0.95, 0.51, 0.61, 0.63, 0.99, 0.77, 0.95,
                      0.98, 0.68, 1.07, 1.04, 1.36, 0.95, 0.51, 0.61, 0.63,
                      0.99, 0.77, 0.95, 0.98, 0.68, 1.07, 1.04, 1.36, 0.95,
                      0.51, 0.61, 0.63, 0.99, 0.77, 0.95, 0.98, 0.68, 1.07,
                      1.04, 1.36, 0.95, 0.51, 0.61, 0.63, 0.99, 0.77, 0.95,
                      0.98, 0.68, 1.07, 1.04, 1.36, 0.95, 0.51, 0.61, 0.63,
                      0.99, 0.77, 0.95, 0.98, 0.68, 1.07, 1.04, 1.36, 0.95,
                      0.51, 0.61, 0.63, 0.99
                    ]
                  },
                  {
                    item: 'TNUoS Revenues',
                    data: [
                      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                      0.0, 0.0, 0.0, 0.0, 0.0
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
] as IDetailedRevenueData[];

export const DEFAULT_INITIAL_CYCLE_DATA = [
  {
    averageCyclesPerDay: 2.0,
    retentionRate: [
      92.22, 88.58, 85.59, 83.04, 80.74, 78.63, 76.66, 74.82, 73.08, 71.41,
      69.79, 68.23, 66.71, 65.19, 63.67, 62.15, 60.63, 59.11, 57.59, 56.07,
      54.55, 53.03, 51.51, 49.99, 48.47, 46.95, 45.43, 43.91, 42.39, 40.87,
      39.35, 37.83, 36.31, 34.79, 33.27, 31.75, 30.23, 28.71, 27.19, 25.67,
      24.15, 22.63, 21.11, 19.59, 18.07
    ]
  },
  {
    averageCyclesPerDay: 1.5,
    retentionRate: [
      92.83, 89.56, 86.89, 84.61, 82.56, 80.68, 78.93, 77.29, 75.75, 74.27,
      72.83, 71.44, 70.09, 68.79, 67.52, 66.28, 65.08, 63.88, 62.68, 61.48,
      60.28, 59.08, 57.88, 56.68, 55.48, 54.28, 53.08, 51.88, 50.68, 49.48,
      48.28, 47.08, 45.88, 44.68, 43.48, 42.28, 41.08, 39.88, 38.68, 37.48,
      36.28, 35.08, 33.88, 32.68, 31.48
    ]
  },
  {
    averageCyclesPerDay: 1.0,
    retentionRate: [
      93.46, 90.59, 88.25, 86.27, 84.49, 82.85, 81.34, 79.93, 78.6, 77.33,
      76.08, 74.88, 73.72, 72.6, 71.5, 70.44, 69.4, 68.38, 67.39, 66.41, 65.43,
      64.45, 63.47, 62.49, 61.51, 60.53, 59.55, 58.57, 57.59, 56.61, 55.63,
      54.65, 53.67, 52.69, 51.71, 50.73, 49.75, 48.77, 47.79, 46.81, 45.83,
      44.85, 43.87, 42.89, 41.91
    ]
  }
] as ICycleData[];

export const DEFAULT_STARTING_BATTERY_ASSUMPTION = {
  degradationForecastAverageCyclesPerDay: 1.25,
  batteryAvailability: 97,
  batteryDuration: 4
} as IStartingBatteryAssumptions;

export const DEFAULT_BATTERY_DISPOSAL = {
  batteryDisposalSwitch: 1,
  disposedRetentionRate: 70,
  recyclePricePercent: 15
} as IBatteryDisposal;

export const DEFAULT_BATTERY_EFFICIENCY = {
  efficiencySwitch: 0,
  fixedEfficiency: 85,
  forecastEfficiency: new Array(50).fill(85)
} as IBatteryEfficiency;

export const DEFAULT_REVENUE_SETUP = {
  forecastProviderChoice: 'Modo',
  inflation: 'CPI to 2050 then nil',
  baseYear: 2023
} as IRevenueSetup;

export const DEFAULT_BATTERY_AUGMENTATION = {
  batteryAugmentationSwitch: 1,
  batteryAugmentationStopYear: 10
} as IBatteryAugmentation;

export const DEFAULT_BATTERY_CUBES = {
  baseYear: 2023,
  data: [
    { duration: 2, value: 198.463 },
    { duration: 4, value: 396.925 }
  ]
} as IBatteryCubes;

export const DEFAULT_BATTERY_EXCUBES = {
  baseYear: 2023,
  data: [
    { duration: 2, value: 41.572 },
    { duration: 4, value: 83.144 }
  ]
} as IBatteryExcubes;

export const DEFAULT_INFLATION_INPUTS = [
  {
    profile: 'No inflation',
    rate: [
      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0
    ]
  },
  {
    profile: 'RPI',
    rate: [
      4.0, 11.6, 10.0, 5.1, 2.6, 2.5, 2.8, 2.9, 2.9, 2.0, 2.0, 2.0, 2.0, 2.0,
      2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
      2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
      2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0
    ]
  },
  {
    profile: 'CPI',
    rate: [
      2.6, 9.1, 7.4, 3.6, 1.8, 1.4, 1.7, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
      2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
      2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
      2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0
    ]
  },
  {
    profile: 'Tees rent high case',
    rate: [
      5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0,
      5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0,
      5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0,
      5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0
    ]
  },
  {
    profile: 'FES to 2050 then nil',
    rate: [
      0.23, 2.58, 4.59, 2.85, 1.7, 1.51, 1.85, 1.99, 2.15, 2.19, 2.18, 2.18,
      2.18, 2.18, 2.18, 2.19, 2.19, 2.19, 2.19, 2.19, 2.19, 2.18, 2.18, 2.18,
      2.17, 2.17, 2.17, 2.17, 2.17, 2.17, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0
    ]
  },
  {
    profile: 'FES constant from 2050',
    rate: [
      0.23, 2.58, 4.59, 2.85, 1.7, 1.51, 1.85, 1.99, 2.15, 2.19, 2.18, 2.18,
      2.18, 2.18, 2.18, 2.19, 2.19, 2.19, 2.19, 2.19, 2.19, 2.18, 2.18, 2.18,
      2.17, 2.17, 2.17, 2.17, 2.17, 2.17, 2.17, 2.17, 2.17, 2.17, 2.17, 2.17,
      2.17, 2.17, 2.17, 2.17, 2.17, 2.17, 2.17, 2.17, 2.17, 2.17, 2.17, 2.17,
      2.17, 2.17, 2.17, 2.17
    ]
  },
  {
    profile: 'CPI to 2050 then nil',
    rate: [
      2.6, 9.1, 7.4, 3.6, 1.8, 1.4, 1.7, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
      2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0
    ]
  },
  {
    profile: 'CPI with 2% collar and 5% cap',
    rate: [
      2.6, 5.0, 5.0, 3.6, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
      2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
      2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
      2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0
    ]
  },
  {
    profile: 'spare',
    rate: [
      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0
    ]
  }
] as IInflationForm[];

export const DEFAULT_CAPEX_PAYMENTS_PROFILE = [
  { capexObject: 'Batteries', paymentProfile: 'BESS profile' },
  { capexObject: 'Land', paymentProfile: '' },
  {
    capexObject: 'Pooling substation',
    paymentProfile: 'Balance of Plant profile'
  },
  { capexObject: 'Transformers', paymentProfile: 'Tx profile' },
  {
    capexObject: 'Balance of Plant',
    paymentProfile: 'Balance of Plant profile'
  },
  {
    capexObject: 'Enterprise value - Development fee',
    paymentProfile: 'Development fee payment profile'
  }
] as ICapexPaymentForm[];

export const DEFAULT_CAPEX_PAYMENT_MILESTONES = [
  {
    profileName: 'BESS profile',
    timing: [
      0, 0, 0, 0.2, 0, 0, 0, 0, 0, 0.09, 0.06, 0, 0.06, 0.06, 0.06, 0.06, 0.07,
      0.07, 0.07, 0.1, 0, 0, 0, 0, 0, 0, 0.05, 0.05, 0, 0
    ]
  },
  {
    profileName: 'Tx profile',
    timing: [
      0, 0, 0, 0, 0, 0, 0, 0, 0.1, 0, 0.1, 0.25, 0, 0, 0, 0, 0, 0, 0, 0, 0.2,
      0.2, 0.1, 0.05, 0, 0, 0, 0, 0, 0
    ]
  },
  {
    profileName: 'Balance of Plant profile',
    timing: [
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.075, 0.02, 0, 0.075, 0.025, 0.03, 0, 0.06,
      0.025, 0.27, 0.1, 0.07, 0.15, 0.05, 0.025, 0, 0, 0.025, 0, 0
    ]
  }
] as ICapexPaymentMilestoneForm[];

export const DEFAULT_CAPEX_UEL = [
  { capexObject: 'Batteries', usefulEconomicLife: 15 },
  { capexObject: 'Devex', usefulEconomicLife: 40 },
  {
    capexObject: 'Pooling substation',
    usefulEconomicLife: 40
  },
  { capexObject: 'Transformers', usefulEconomicLife: 40 },
  {
    capexObject: 'Balance of Plant',
    usefulEconomicLife: 40
  },
  {
    capexObject: 'Enterprise value - Development fee',
    usefulEconomicLife: 40
  },
  {
    capexObject: 'Capitalised rent in construction',
    usefulEconomicLife: 40
  }
] as ICapexUELForm[];

export const DEFAULT_BESS_CAPEX_FORECAST = {
  inflationProfile: 'No inflation',
  baseYear: 2023
} as IBessCapexForecast;

export const DEFAULT_VINTAGE = {
  electricitySold: new Array(600).fill(0),
  vintages: [
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    },
    {
      name: 'vintage',
      data: {
        additionsCost: 0,
        capacityAddedAdjustedForEfficiency: 0,
        capacityPostEfficiencyAndDegradation: 0,
        capacityPreAdjustmentForEfficiency: 1000,
        cumulativeDegradation: 0,
        degradationInPeriod: 0,
        disposalFlag: 0,
        disposalMonthNumber: 0,
        forecastCapexAdditions: 0,
        forecastCapexPrice: 0,
        grossCashPayments: 0,
        stagingFlag: 0,
        stagingMonthNumber: 1,
        endBalance: new Array(600).fill(0),
        forecastAdditionsByMilestones: new Array(600).fill(0),
        forecastDepreciationChargeByPeriod: new Array(600).fill(0),
        generationCapacityInPeriod: new Array(600).fill(0),
        paymentMilestones: new Array(600).fill(0),
        startBalance: new Array(600).fill(0)
      }
    }
  ],
  totalGenerationCapacity: new Array(600).fill(0)
} as IVintage;
// export interface IVintage {
//   electricitySold: number[];
//   vintages: { name: string; data: any }[];
//   totalGenerationCapacity: number[];
// }
export const DEFAULT_MCAPEX_PROVISION = {
  cashEndBalance: new Array(600).fill(0),
  cashStartBalance: new Array(600).fill(0),
  dividends: new Array(600).fill(0),
  netCashflow: new Array(600).fill(0),
  profit_loss_after_tax: new Array(600).fill(0),
  profit_loss_before_tax: new Array(600).fill(0),
  retained_earnings_end_balance: new Array(600).fill(0),
  retained_earnings_start_balance: new Array(600).fill(0),
  seniorDebtDrawdown: new Array(600).fill(0),
  seniorDebtRepayment: new Array(600).fill(0),
  senior_debt_for_balance_sheet: new Array(600).fill(0),
  senior_debt_interest: new Array(600).fill(0),
  shareCapitalDrawdown: new Array(600).fill(0),
  shareholderLoanDrawdown: new Array(600).fill(0),
  shareholder_loan_for_balance_sheet: new Array(600).fill(0),
  shareholder_loan_interest: new Array(600).fill(0),
  shareholder_loan_repayment: new Array(600).fill(0),
  total_cash_payment: new Array(600).fill(0)
};

export const DEFAULT_REVENUE_ASSUMPTIONS_DATA = [
  {
    providerName: 'Modo',
    data: {
      efficiency: 88,
      inflation: 'FES to 2050 then nil',
      baseYear: 2023,
      region: 'Northern',
      tradingStrategy: 'Merchant and ancillaries'
    }
  }
  // {
  //   providerName: 'Afry',
  //   data: {
  //     efficiency: 88,
  //     inflation: 'FES to 2050 then nil',
  //     baseYear: 2023,
  //     region: 'Nothern',
  //     tradingStrategy: 'Merchant and ancillaries'
  //   }
  // },
  // {
  //   providerName: 'Baringa',
  //   data: {
  //     efficiency: 88,
  //     inflation: 'FES to 2050 then nil',
  //     baseYear: 2023,
  //     region: 'Nothern',
  //     tradingStrategy: 'Merchant and ancillaries'
  //   }
  // }
] as IAssumptionData[];

export const DEFAULT_FIXED_PPA = {
  data: [
    {
      contract: 'firstFixed',
      data: { startDate: '', endDate: '', price: 0 }
    },
    {
      contract: 'secondFixed',
      data: { startDate: '', endDate: '', price: 0 }
    }
  ],
  assignedPercentage: 0,
  switch: 0
} as IFixedPPA;

export const DEFAULT_FLOATING_PPA = {
  data: [
    {
      contract: 'firstFixed',
      data: { startDate: '', endDate: '' }
    },
    {
      contract: 'secondFixed',
      data: { startDate: '', endDate: '' }
    }
  ],
  assignedPercentage: 0,
  discountToWholesalePriceForMarginPercentage: 0,
  switch: 0
} as IFloatingPPA;

// export const DEFAULT_SYSTEM_PEAK_TARIFF_DATA = [
//   {
//     zone: 'North Scotland',
//     value: [
//       -1.296, -2.168, -3.297, -5.281, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205
//     ]
//   },
//   {
//     zone: 'East Aberdeenshire',
//     value: [
//       -1.296, -2.168, -3.297, -5.281, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205
//     ]
//   },
//   {
//     zone: 'Western Highlands',
//     value: [
//       -1.296, -2.168, -3.297, -5.281, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205
//     ]
//   },
//   {
//     zone: 'Skye and Lochalsh',
//     value: [
//       -1.296, -2.168, -3.297, -5.281, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205
//     ]
//   },
//   {
//     zone: 'Eastern Grampian and Tayside',
//     value: [
//       -1.296, -2.168, -3.297, -5.281, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205
//     ]
//   },
//   {
//     zone: 'Central Grampian',
//     value: [
//       -1.296, -2.168, -3.297, -5.281, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205
//     ]
//   },
//   {
//     zone: 'Argyll',
//     value: [
//       -1.296, -2.168, -3.297, -5.281, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205
//     ]
//   },
//   {
//     zone: 'The Trossachs',
//     value: [
//       -1.296, -2.168, -3.297, -5.281, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205
//     ]
//   },
//   {
//     zone: 'Stirlingshire and Fife',
//     value: [
//       -1.296, -2.168, -3.297, -5.281, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205
//     ]
//   },
//   {
//     zone: 'South West Scotlands',
//     value: [
//       -1.296, -2.168, -3.297, -5.281, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205
//     ]
//   },
//   {
//     zone: 'Lothian and Borders',
//     value: [
//       -1.296, -2.168, -3.297, -5.281, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205
//     ]
//   },
//   {
//     zone: 'Solway and Cheviot',
//     value: [
//       -1.296, -2.168, -3.297, -5.281, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205
//     ]
//   },
//   {
//     zone: 'North East England',
//     value: [
//       -1.296, -2.168, -3.297, -5.281, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205
//     ]
//   },
//   {
//     zone: 'North Lancashire and The Lakes',
//     value: [
//       -1.296, -2.168, -3.297, -5.281, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205
//     ]
//   },
//   {
//     zone: 'South Lancashire, Yorkshire and Humber',
//     value: [
//       -1.296, -2.168, -3.297, -5.281, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205
//     ]
//   },
//   {
//     zone: 'North Midlands and North Wales',
//     value: [
//       -1.296, -2.168, -3.297, -5.281, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205
//     ]
//   },
//   {
//     zone: 'South Lincolnshire and North Norfolk',
//     value: [
//       -1.296, -2.168, -3.297, -5.281, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205
//     ]
//   },
//   {
//     zone: 'Mid Wales and The Midlands',
//     value: [
//       -1.296, -2.168, -3.297, -5.281, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205
//     ]
//   },
//   {
//     zone: 'Anglesey and Snowdon',
//     value: [
//       -1.296, -2.168, -3.297, -5.281, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205
//     ]
//   },
//   {
//     zone: 'Pembrokeshire',
//     value: [
//       -1.296, -2.168, -3.297, -5.281, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205
//     ]
//   },
//   {
//     zone: 'South Wales & Gloucester',
//     value: [
//       -1.296, -2.168, -3.297, -5.281, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205
//     ]
//   },
//   {
//     zone: 'Cotswold',
//     value: [
//       -1.296, -2.168, -3.297, -5.281, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205
//     ]
//   },
//   {
//     zone: 'Central London',
//     value: [
//       -1.296, -2.168, -3.297, -5.281, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205
//     ]
//   },
//   {
//     zone: 'Essex and Kent',
//     value: [
//       -1.296, -2.168, -3.297, -5.281, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205
//     ]
//   },
//   {
//     zone: 'Oxfordshire, Surrey and Sussex',
//     value: [
//       -1.296, -2.168, -3.297, -5.281, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205
//     ]
//   },
//   {
//     zone: 'Somerset and Wessex',
//     value: [
//       -1.296, -2.168, -3.297, -5.281, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205
//     ]
//   },
//   {
//     zone: 'West Devon and Cornwall',
//     value: [
//       -1.296, -2.168, -3.297, -5.281, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205, -6.205,
//       -6.205, -6.205, -6.205, -6.205
//     ]
//   }
// ];

export const DEFAULT_TRIADS_INCOME = {
  value: [
    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
    0.0, 0.0, 0.0, 0.0, 0.0
  ],
  switch: 0
} as ITriadsIncome;

export const DEFAULT_WHOLESALE_DAY_AHEAD = new Array(600).fill(0);
export const DEFAULT_WHOLESALE_INTRADAY = new Array(600).fill(0);
export const DEFAULT_BALANCING_MECHANISM = new Array(600).fill(0);
export const DEFAULT_CAPACITY_MARKET = new Array(600).fill(0);
export const DEFAULT_FREQUENCY_RESPONSE = new Array(600).fill(0);
export const DEFAULT_GAIN_ON_DISPOSAL = {
  forecastRecycleRevenue: new Array(600).fill(0),
  bookValueAtPointOfDisposal: new Array(600).fill(0),
  gainOnDisposalRevenue: new Array(600).fill(0)
};
export const DEFAULT_TOTAL_COGS = new Array(600).fill(0);
export const DEFAULT_TOTAL_ADMIN_COSTS = new Array(600).fill(0);
export const DEFAULT_TOTAL_DEPRECIATION = new Array(600).fill(0);
export const DEFAULT_FIXED_PPA_VALUE = new Array(600).fill(0);
export const DEFAULT_FLOATING_PPA_VALUE = new Array(600).fill(0);
